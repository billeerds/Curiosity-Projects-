suppressPackageStartupMessages({
library(TSA)
library(ggplot2)
library(dplyr)
library(forecast)
})
suppressPackageStartupMessages({
library(TSA)
library(ggplot2)
library(dplyr)
library(forecast)
})
set.seed(42) # PLEASE DO NOT CHANGE THE SEED
T <- 100L
# Please type your code below
# (For practice submission - uncomment these lines and knit)
df1 <- data.frame(e = ts(rnorm(T)))
class(df1$e)
# Please type your code below
# (For practice submission - uncomment these lines and knit)
p2 <- ggplot(df1) +
geom_line(aes(x=time(e),y=e)) +
geom_point(aes(x=time(e),y=e), shape=1, size=3) +
scale_x_continuous() +
scale_y_continuous()
p2
knitr::opts_chunk$set(echo = TRUE)
setwd('C://Users//wjeer//OneDrive//Side Projects//UM Data Challenge//Data challenge_UofM')
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
#read in sales_cust data
sales_cust_tot <- read.csv("sales_cust.csv")
sales_cust_tot <- tbl_df(sales_cust_tot)
#read in store
store_comp <- read.csv("store.csv")
store_comp <- tbl_df(store_comp)
#Summarize the data for initial look
head(sales_cust_tot)
summary(sales_cust_tot)
#visually observe the data where there are NAs
#Start with Open
sc_open_NAs <- sales_cust_tot %>% filter(is.na(Open))
#Take a look at the values
print(sc_open_NAs, n=59)
#For the Open NAs, impute 1's for the Open column and for those where the Day of the week is 7,
#impute Open = 0
sales_cust_tot[which(is.na(sales_cust_tot$Open) & sales_cust_tot$DayOfWeek == 7),]$Open <- 0
sales_cust_tot[which(is.na(sales_cust_tot$Open) & sales_cust_tot$Sales > 0),]$Open <- 1
#Now turn attention to the 103 NAs in SchoolHoliday
sc_holiday_NAs <- sales_cust_tot %>% filter(is.na(SchoolHoliday))
#Take a look at the values
print(sc_holiday_NAs, n=59)
#delete the rows in School Holiday where NA
#make a new dataframe without the rows with NA
sales_cust <- sales_cust_tot[which(!is.na(sales_cust_tot$SchoolHoliday)),]
sales_cust$Store <- as.factor(sales_cust$Store)
sales_cust$DayOfWeek <- as.factor(sales_cust$DayOfWeek)
sales_cust$Date <- as.Date(sales_cust$Date, "%m/%d/%y")
#Look at the store_comp data now
head(store_comp)
summary(store_comp)
#Observe the 3 rows where Competition Distance is NA
store_comp %>% filter(is.na(CompetitionDistance))
#Delete the 3 rows from the data
store_comp2 <- store_comp %>% filter(!is.na(CompetitionDistance))
#calculate total sales per day for the stores provided
tot_sales <- sales_cust %>%
filter(Open == 1 & DayOfWeek != 7) %>%
group_by(Date) %>%
summarize(daily_sales =sum(Sales))
#plot total sales per day
ggplot(tot_sales) + geom_line(aes(x=Date, y=daily_sales))+geom_point(aes(x=Date, y=daily_sales))
#Consider Holidays in the picture
tot_sales_hol <- sales_cust %>%
filter(Open == 1 & DayOfWeek == 7) %>%
group_by(Date, StateHoliday, SchoolHoliday) %>%
summarize(daily_sales =sum(Sales))
#color the holiday points
ggplot(tot_sales_hol) + geom_line(aes(x=Date, y=daily_sales))+geom_point(aes(x=Date, y=daily_sales, color = StateHoliday))
#color the school holiday points
ggplot(tot_sales_hol) + geom_line(aes(x=Date, y=daily_sales))+geom_point(aes(x=Date, y=daily_sales, color = as.factor(SchoolHoliday)))
#Look at school holidays
ggplot(tot_sales_hol[which(tot_sales_hol$SchoolHoliday == 1),]) + geom_line(aes(x=Date, y=daily_sales))+geom_point(aes(x=Date, y=daily_sales, color = as.factor(SchoolHoliday)))
#create weekly seasonal plot and monthly seasonplot
#Remeber these are the averages, may want to look into sums
seasonal_weeks <- sales_cust %>%
group_by(year = year(Date),DayOfWeek) %>%
summarize(sales_over_wk = mean(Sales))
seasonal_months <- sales_cust %>%
group_by(year = year(Date), months = month(Date)) %>%
summarize(sales_by_month = mean(Sales))
#plot seasonal weeks and months
ggplot(seasonal_weeks) + geom_line(aes(x=DayOfWeek, y= sales_over_wk, group=year, color=as.factor(year)))
ggplot(seasonal_months) + geom_line(aes(x=months, y= sales_by_month, group = year, color=as.factor(year)))
#create weekly seasonal plot and monthly seasonplot
#THESE ARE SUMS
seasonal_weeks <- sales_cust %>%
group_by(year = year(Date),DayOfWeek) %>%
summarize(sales_over_wk = sum(Sales))
seasonal_months <- sales_cust %>%
group_by(year = year(Date), months = month(Date)) %>%
summarize(sales_by_month = sum(Sales))
#plot seasonal weeks and months
ggplot(seasonal_weeks) + geom_line(aes(x=DayOfWeek, y= sales_over_wk, group=year, color=as.factor(year)))
ggplot(seasonal_months) + geom_line(aes(x=months, y= sales_by_month, group = year, color=as.factor(year)))
library(AnomalyDetection)
library(dygraphs)
library(xts)
sales_cust$day <- as.numeric(format(as.Date(sales_cust$Date,format="%Y-%m-%d"), "%d"))
sales_cust$month <- as.numeric(format(as.Date(sales_cust$Date,format="%Y-%m-%d"), "%m"))
sales_cust$year <- as.numeric(format(as.Date(sales_cust$Date,format="%Y-%m-%d"), "%Y"))
daily_sales <- sales_cust %>%
filter(Open == 1 & DayOfWeek != 7) %>%
group_by(day, month, year) %>%
summarize(daily_sales =sum(Sales))
res <- AnomalyDetectionVec(daily_sales[,4], alpha=0.05, period=365, direction='both', only_last=FALSE, plot=TRUE)
res$plot
positive_outlier <- AnomalyDetectionVec(daily_sales[,4], alpha=0.05, period=365, direction='pos', only_last=FALSE, plot=TRUE)
positive_outlier$plot
daily_sales[positive_outlier$anoms$index,]
negative_outlier <- AnomalyDetectionVec(daily_sales[,4], alpha=0.05, period=365, direction='neg', only_last=FALSE, plot=TRUE)
negative_outlier$plot
daily_sales[negative_outlier$anoms$index,]
View(daily_sales)
View(tot_sales)
ggplot(tot_sales) + geom_line(aes(x=Date, y=daily_sales))+geom_point(aes(x=Date, y=daily_sales))
daily_sales <- sales_cust %>%
filter(Open == 1 & DayOfWeek != 7 & StateHoliday == 0) %>%
group_by(day, month, year) %>%
summarize(daily_sales =sum(Sales))
res <- AnomalyDetectionVec(daily_sales[,4], alpha=0.05, period=365, direction='both', only_last=FALSE, plot=TRUE)
res$plot
positive_outlier <- AnomalyDetectionVec(daily_sales[,4], alpha=0.05, period=365, direction='pos', only_last=FALSE, plot=TRUE)
positive_outlier$plot
daily_sales[positive_outlier$anoms$index,]
negative_outlier <- AnomalyDetectionVec(daily_sales[,4], alpha=0.05, period=365, direction='neg', only_last=FALSE, plot=TRUE)
negative_outlier$plot
daily_sales[negative_outlier$anoms$index,]
daily_sales <- sales_cust %>%
filter(Open == 1 & DayOfWeek != 7 & SchoolHoliday == 0) %>%
group_by(day, month, year) %>%
summarize(daily_sales =sum(Sales))
res <- AnomalyDetectionVec(daily_sales[,4], alpha=0.05, period=365, direction='both', only_last=FALSE, plot=TRUE)
res$plot
positive_outlier <- AnomalyDetectionVec(daily_sales[,4], alpha=0.05, period=365, direction='pos', only_last=FALSE, plot=TRUE)
positive_outlier$plot
daily_sales[positive_outlier$anoms$index,]
negative_outlier <- AnomalyDetectionVec(daily_sales[,4], alpha=0.05, period=365, direction='neg', only_last=FALSE, plot=TRUE)
negative_outlier$plot
daily_sales[negative_outlier$anoms$index,]
res <- AnomalyDetectionVec(daily_sales[,4], alpha=0.02, period=365, direction='both', only_last=FALSE, plot=TRUE)
res$plot
res <- AnomalyDetectionVec(daily_sales[,4], alpha=0.05, period=365, direction='both', only_last=FALSE, plot=TRUE)
res$plot
res <- AnomalyDetectionVec(daily_sales[,4], alpha=0.01, period=365, direction='both', only_last=FALSE, plot=TRUE)
res$plot
res <- AnomalyDetectionVec(daily_sales[,4], alpha=0.005, period=365, direction='both', only_last=FALSE, plot=TRUE)
res$plot
res <- AnomalyDetectionVec(daily_sales[,4], alpha=0.001, period=365, direction='both', only_last=FALSE, plot=TRUE)
res$plot
positive_outlier <- AnomalyDetectionVec(daily_sales[,4], alpha=0.001, period=365, direction='pos', only_last=FALSE, plot=TRUE)
positive_outlier$plot
daily_sales[positive_outlier$anoms$index,]
negative_outlier <- AnomalyDetectionVec(daily_sales[,4], alpha=0.001, period=365, direction='neg', only_last=FALSE, plot=TRUE)
negative_outlier$plot
daily_sales[negative_outlier$anoms$index,]
positive_outlier <- AnomalyDetectionVec(daily_sales[,4], alpha=0.001, period=365, direction='pos', only_last=FALSE, plot=TRUE)
positive_outlier$plot
daily_sales[positive_outlier$anoms$index,]
negative_outlier <- AnomalyDetectionVec(daily_sales[,4], alpha=0.001, period=365, direction='neg', only_last=FALSE, plot=TRUE)
negative_outlier$plot
daily_sales[negative_outlier$anoms$index,]
daily_sales[res$anoms$index,]
promo_sales <- sales_cust %>%
filter(Open == 1 & DayOfWeek != 7 & SchoolHoliday == 0) %>%
group_by(day, month, year) %>%
summarize(daily_sales =sum(Sales), active_promotions = sum(Promo))
View(promo_sales)
View(daily_sales)
View(tot_sales)
daily_sales <- sales_cust %>%
filter(Open == 1 & DayOfWeek != 7 & SchoolHoliday == 0) %>%
group_by(year, month, day) %>%
summarize(daily_sales =sum(Sales))
daily_sales <- sales_cust %>%
filter(Open == 1 & DayOfWeek != 7 & SchoolHoliday == 0) %>%
group_by(year, month, day) %>%
summarize(daily_sales =sum(Sales)) %>%
arrange(year, month, day)
daily_sales <- sales_cust %>%
filter(Open == 1 & DayOfWeek != 7 & SchoolHoliday == 0) %>%
group_by(year, month, day) %>%
summarize(daily_sales =sum(Sales)) %>%
arrange(year, day, month)
daily_sales <- sales_cust %>%
filter(Open == 1 & DayOfWeek != 7 & SchoolHoliday == 0) %>%
group_by(year, month, day) %>%
summarize(daily_sales =sum(Sales)) %>%
arrange(year, month, day)
res <- AnomalyDetectionVec(daily_sales[,4], alpha=0.001, period=365, direction='both', only_last=FALSE, plot=TRUE)
res$plot
res <- AnomalyDetectionVec(daily_sales[,4], alpha=0.05, period=365, direction='both', only_last=FALSE, plot=TRUE)
res$plot
daily_sales[res$anoms$index,]
positive_outlier <- AnomalyDetectionVec(daily_sales[,4], alpha=0.05, period=365, direction='pos', only_last=FALSE, plot=TRUE)
positive_outlier$plot
daily_sales[positive_outlier$anoms$index,]
negative_outlier <- AnomalyDetectionVec(daily_sales[,4], alpha=0.05, period=365, direction='neg', only_last=FALSE, plot=TRUE)
negative_outlier$plot
daily_sales[negative_outlier$anoms$index,]
tot_sales <- sales_cust %>%
filter(Open == 1 & DayOfWeek != 7) %>%
group_by(Date) %>%
summarize(daily_sales =sum(Sales))
#plot total sales per day
ggplot(tot_sales) + geom_line(aes(x=Date, y=daily_sales))+geom_point(aes(x=Date, y=daily_sales))
#Consider Holidays in the picture
tot_sales_hol <- sales_cust %>%
filter(Open == 1 & DayOfWeek == 7) %>%
group_by(Date, StateHoliday, SchoolHoliday) %>%
summarize(daily_sales =sum(Sales))
#color the holiday points
ggplot(tot_sales_hol) + geom_line(aes(x=Date, y=daily_sales))+geom_point(aes(x=Date, y=daily_sales, color = StateHoliday))
View(tot_sales_hol)
res <- AnomalyDetectionVec(daily_sales[,4], alpha=0.05, period=365, direction='both', only_last=FALSE, plot=TRUE)
res$plot
daily_sales[res$anoms$index,]
positive_outlier <- AnomalyDetectionVec(daily_sales[,4], alpha=0.05, period=365, direction='pos', only_last=FALSE, plot=TRUE)
positive_outlier$plot
daily_sales[positive_outlier$anoms$index,]
negative_outlier <- AnomalyDetectionVec(daily_sales[,4], alpha=0.05, period=365, direction='neg', only_last=FALSE, plot=TRUE)
negative_outlier$plot
daily_sales[negative_outlier$anoms$index,]
View(promo_sales)
promo_sales <- sales_cust %>%
filter(Open == 1 & DayOfWeek != 7 & SchoolHoliday == 0) %>%
group_by(year, month, day) %>%
summarize(daily_sales =sum(Sales), active_promotions = sum(Promo))
View(promo_sales)
View(store_comp2)
ggplot(store_comp2)+geom_density(CompetitionDistance)
ggplot(store_comp2)+geom_density(aes(x=CompetitionDistance))
View(daily_sales)
ggplot(daily_sales) + geom_line(aes(y=daily_sales)) + geom_line(aes(y=promotions))
ggplot(promo_sales) + geom_line(aes(y=daily_sales)) + geom_line(aes(y=active_promotions))
ggplot(promo_sales) + geom_line(aes(x=seq(1:772), y=daily_sales)) + geom_line(aes(x= seq(1:772), y=active_promotions))
ggplot(promo_sales) + geom_line(aes(x=seq(1:772), y=daily_sales, color=active_promotions))
ggplot(promo_sales) + geom_line(aes(x=seq(1:772), y=daily_sales))+geom_point(aes(x=seq(1:772), y=daily_sales, color= active_promotions))
ggplot(promo_sales) + geom_line(aes(x=seq(1:772), y=daily_sales))+geom_point(aes(x=seq(1:772), y=daily_sales, color= active_promotions, size = 3))
ggplot(promo_sales) + geom_line(aes(x=seq(1:772), y=daily_sales))+geom_point(aes(x=seq(1:772), y=daily_sales, color= active_promotions, size = 2))
ggplot(promo_sales) + geom_line(aes(x=seq(1:772), y=daily_sales))+geom_point(aes(x=seq(1:772), y=daily_sales, color= active_promotions, size = 1))
ggplot(promo_sales) + geom_line(aes(x=seq(1:772), y=daily_sales))+geom_point(aes(x=seq(1:772), y=daily_sales, color= active_promotions), size = 1)
ggplot(promo_sales) + geom_line(aes(x=seq(1:772), y=daily_sales))+geom_point(aes(x=seq(1:772), y=daily_sales, color= active_promotions), size = 2)
daily_sales[positive_outlier$anoms$index,]
daily_sales[negative_outlier$anoms$index,]
daily_sales[res$anoms$index,]
promo_sales$outlier <- 0
promo_sales[pos_out]
promo_sales[pos_out,]
pos_out
pos_out <- daily_sales[positive_outlier$anoms$index,]
neg_out <- daily_sales[negative_outlier$anoms$index,]
promo_sales[pos_out]
promo_sales[pos_out,]
pos_out
positive_outlier$anoms$index
negative_outlier$anoms$index
pos_out <- positive_outlier$anoms$index
neg_out <- negative_outlier$anoms$index
promo_sales[pos_out,]
promo_sales[pos_out]$outlier <- 1
promo_sales[pos_out,]$outlier <- 1
promo_sales[neg_out,]$outlier <- -1
promo_sales$outlier <- as.factor(promo_sales$outlier)
ggplot(promo_sales) + geom_line(aes(x=seq(1:772), y=daily_sales), color = active_promotions)+geom_point(aes(x=seq(1:772), y=daily_sales, color= outlier), size = 2)
ggplot(promo_sales) + geom_line(aes(x=seq(1:772), y=daily_sales, color = active_promotions))+geom_point(aes(x=seq(1:772), y=daily_sales, color= outlier), size = 2)
ggplot(promo_sales) + geom_line(aes(x=seq(1:772), y=daily_sales, color = active_promotions))+geom_point(aes(x=seq(1:772), y=daily_sales), color= outlier, size = 2)
ggplot(promo_sales) + geom_line(aes(x=seq(1:772), y=daily_sales, color = active_promotions))+geom_point(aes(x=seq(1:772), y=daily_sales, color= outlier), size = 2)
ggplot(promo_sales) + geom_line(aes(x=seq(1:772), y=daily_sales))+geom_point(aes(x=seq(1:772), y=daily_sales, color= outlier), size = 2)
ggplot(promo_sales) + geom_line(aes(x=seq(1:772), y=daily_sales))+geom_point(aes(x=seq(1:772), y=daily_sales, color= outlier), size = 1)
ggplot(promo_sales) + geom_line(aes(x=seq(1:772), y=daily_sales, color = active_promotions))+geom_point(aes(x=seq(1:772), y=daily_sales, color= outlier), size = 1)
ggplot(promo_sales) + geom_line(aes(x=seq(1:772), y=daily_sales, color = active_promotions))+geom_point(aes(x=seq(1:772), y=daily_sales, color= outlier), size = 1)
ggplot(promo_sales) + geom_line(aes(x=seq(1:772), y=daily_sales), color = active_promotions)+geom_point(aes(x=seq(1:772), y=daily_sales, color= outlier), size = 1)
ggplot(promo_sales) + geom_line(aes(x=seq(1:772), y=daily_sales), colour = active_promotions)+geom_point(aes(x=seq(1:772), y=daily_sales, color= outlier), size = 1)
ggplot(promo_sales) + geom_line(aes(x=seq(1:772), y=daily_sales))+geom_point(aes(x=seq(1:772), y=daily_sales, color= outlier), size = 1)
a <- ggplot(promo_sales) + geom_line(aes(x=seq(1:772), y=daily_sales))+geom_point(aes(x=seq(1:772), y=daily_sales, color= active_promotions), size = 2)
b <- ggplot(promo_sales) + geom_line(aes(x=seq(1:772), y=daily_sales))+geom_point(aes(x=seq(1:772), y=daily_sales, color= outlier), size = 1)
facet(a,b)
grid.arrange(a, b, ncol=2)
a <- ggplot(promo_sales) + geom_line(aes(x=seq(1:772), y=daily_sales))+geom_point(aes(x=seq(1:772), y=daily_sales, color= active_promotions), size = 2)
b <- ggplot(promo_sales) + geom_line(aes(x=seq(1:772), y=daily_sales))+geom_point(aes(x=seq(1:772), y=daily_sales, color= outlier), size = 1)
gridExtra::grid.arrange(a, b, ncol=2)
b <- ggplot(promo_sales) + geom_line(aes(x=seq(1:772), y=daily_sales))+geom_point(aes(x=seq(1:772), y=daily_sales, color= outlier), size = 2)
gridExtra::grid.arrange(a, b, ncol=2)
comp_dist <- store_comp2 %>%
group_by(CompetitionOpenSinceMonth, CompetitionOpenSinceYear) %>%
summarize(median_dist = median(CompetitionDistance))
View(comp_dist)
comp_dist <- store_comp2 %>%
group_by(CompetitionOpenSinceMonth, CompetitionOpenSinceYear) %>%
summarize(median_dist = median(CompetitionDistance)) %>%
arrange(CompetitionOpenSinceMonth, CompetitionOpenSinceYear)
comp_dist <- store_comp2 %>%
group_by(CompetitionOpenSinceMonth, CompetitionOpenSinceYear) %>%
summarize(median_dist = median(CompetitionDistance)) %>%
arrange(CompetitionOpenSinceYear, CompetitionOpenSinceMonth)
test2<-store_comp2 %>% arrange(CompetitionOpenSinceYear, CompetitionOpenSinceMonth) %>%
mutate(ma2=zoo::rollapply(CompetitionDistance,2,mean,align='right',fill=NA))
View(test2)
test2<-store_comp2[-c(1,2),] %>% arrange(CompetitionOpenSinceYear, CompetitionOpenSinceMonth) %>%
mutate(ma2=zoo::rollapply(CompetitionDistance,2,mean,align='right',fill=NA))
test2<-store_comp2 %>% arrange(CompetitionOpenSinceYear, CompetitionOpenSinceMonth) %>%
mutate(ma2=zoo::rollapply(CompetitionDistance,2,mean,align='right',fill=NA)) %>%
group_by(CompetitionOpenSinceMonth, CompetitionOpenSinceYear) %>%
summarize(median_dist = median(CompetitionDistance)) %>%
arrange(CompetitionOpenSinceYear, CompetitionOpenSinceMonth)
test2<-store_comp2 %>% arrange(CompetitionOpenSinceYear, CompetitionOpenSinceMonth) %>%
mutate(ma2=zoo::rollapply(CompetitionDistance,2,mean,align='right',fill=NA)) %>%
group_by(CompetitionOpenSinceMonth, CompetitionOpenSinceYear) %>%
summarize(median_dist = mean(CompetitionDistance)) %>%
arrange(CompetitionOpenSinceYear, CompetitionOpenSinceMonth)
test2<-store_comp2 %>% arrange(CompetitionOpenSinceYear, CompetitionOpenSinceMonth) %>%
mutate(ma2=zoo::rollapply(CompetitionDistance,2,mean,align='right',fill=NA)) #%>%
test2<-store_comp2 %>% filter(CompetitionOpenSinceYear >=2013) %>%
arrange(CompetitionOpenSinceYear, CompetitionOpenSinceMonth) %>%
mutate(ma2=zoo::rollapply(CompetitionDistance,2,mean,align='right',fill=NA)) #%>%
test2<-store_comp2 %>% filter(CompetitionOpenSinceYear >=1990) %>%
arrange(CompetitionOpenSinceYear, CompetitionOpenSinceMonth) %>%
group_by(CompetitionOpenSinceMonth, CompetitionOpenSinceYear) %>%
summarize(median_dist = cummean(CompetitionDistance)) %>%
arrange(CompetitionOpenSinceYear, CompetitionOpenSinceMonth)
test2<-store_comp2 %>% filter(CompetitionOpenSinceYear >=1990) %>%
arrange(CompetitionOpenSinceYear, CompetitionOpenSinceMonth) %>%
mutate(rolling_mean = cummean(DistanceCompetition)) #%>%
test2<-store_comp2 %>% filter(CompetitionOpenSinceYear >=1990) %>%
arrange(CompetitionOpenSinceYear, CompetitionOpenSinceMonth) %>%
mutate(rolling_mean = cummean(CompetitionDistance)) #%>%
test2<-store_comp2 %>% filter(CompetitionOpenSinceYear >=1990) %>%
arrange(CompetitionOpenSinceYear, CompetitionOpenSinceMonth) %>%
mutate(rolling_mean = cummean(CompetitionDistance)) #%>%
group_by(CompetitionOpenSinceMonth, CompetitionOpenSinceYear) %>%
summarize(rolling_mean = mean(rolling_mean)) %>%
arrange(CompetitionOpenSinceYear, CompetitionOpenSinceMonth)
test2<-store_comp2 %>% filter(CompetitionOpenSinceYear >=1990) %>%
arrange(CompetitionOpenSinceYear, CompetitionOpenSinceMonth) %>%
mutate(rolling_mean = cummean(CompetitionDistance)) #%>%
group_by(CompetitionOpenSinceMonth, CompetitionOpenSinceYear) %>%
summarize(rolling_mean = mean(rolling_mean))
test2<-store_comp2 %>% filter(CompetitionOpenSinceYear >=1990) %>%
arrange(CompetitionOpenSinceYear, CompetitionOpenSinceMonth) %>%
mutate(rolling_mean = cummean(CompetitionDistance)) %>%
group_by(CompetitionOpenSinceMonth, CompetitionOpenSinceYear) %>%
summarize(rolling_mean = mean(rolling_mean)) %>%
arrange(CompetitionOpenSinceYear, CompetitionOpenSinceMonth)
comp_dist <-store_comp2 %>% filter(CompetitionOpenSinceYear >=1990) %>%
arrange(CompetitionOpenSinceYear, CompetitionOpenSinceMonth) %>%
mutate(rolling_mean = cummean(CompetitionDistance)) %>%
group_by(CompetitionOpenSinceMonth, CompetitionOpenSinceYear) %>%
summarize(rolling_mean = mean(rolling_mean)) %>%
arrange(CompetitionOpenSinceYear, CompetitionOpenSinceMonth)
promo_comp <- merge(promo_sales, comp_dist, by.x= c("year", "month"), by.y=c("CompetitionOpenSinceYear","CompetitionOpenSinceMonth"))
View(promo_comp)
knitr::opts_chunk$set(echo = TRUE)
setwd('C://Users//wjeer//OneDrive//Side Projects//UM Data Challenge//Data challenge_UofM')
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(rpart)
tree <- rpart(outlier ~ month + daily_sales + active_promotions + rolling_mean, data = promo_comp, method = "class")
printcp(tree)
tree <- rpart(outlier ~ month + active_promotions + rolling_mean, data = promo_comp, method = "class")
printcp(tree)
plotcp(tree)
summary(treet)
summary(tree)
write.csv(promo_comp, "promo_comp.csv")
tree <- rpart(outlier ~ month + active_promotions + rolling_mean + daily_sales, data = promo_comp, method = "class")
printcp(tree)
plotcp(tree)
summary(tree)
post(tree, title = "Classification Tree for Outliers")
plot(tree, uniform=TRUE,
main="Classification Tree for Outliers")
text(fit, use.n=TRUE, all=TRUE, cex=.8)
plot(tree, uniform=TRUE,
main="Classification Tree for Outliers")
text(tree, use.n=TRUE, all=TRUE, cex=.8)
post(tree, file = "D:/tree.ps",
title = "Classification Tree for Outliers")
printcp(tree)
plotcp(tree)
summary(tree)
tree <- rpart(outlier ~ active_promotions + rolling_mean + daily_sales, data = promo_comp, method = "class")
printcp(tree)
plotcp(tree)
summary(tree)
plot(tree, uniform=TRUE,
main="Classification Tree for Outliers")
text(tree, use.n=TRUE, all=TRUE, cex=.8)
log <- glm(outlier ~ active_promotions + rolling_mean + daily_sales, data = promo_comp)
log <- glm(as.numeric(outlier) ~ active_promotions + rolling_mean + daily_sales, data = promo_comp)
log
plot(tree, uniform=TRUE,
main="Classification Tree for Outliers")
text(tree, use.n=TRUE, all=TRUE, cex=.5)
plot(tree, uniform=TRUE,
main="Classification Tree for Outliers")
text(tree, use.n=TRUE, all=TRUE, cex=.7)
plot(tree, uniform=TRUE,
main="Classification Tree for Outliers")
text(tree, use.n=TRUE, all=TRUE, cex=.6)
